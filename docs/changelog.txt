3/12/2023: Luke & Karl
- Started pipeline for sending CommentReports

3/12/2023: Karl
- AssignGlobalModerator, AssignAdmin structs and pipeline 
- Changing a logged-in user's controller will swap it at runtime and push a login response to the user's nextmessages so their front end can quickly realize the changes. 
- Added a 2nd migration to populate some test data (admin user karl pw karlkarl, globalmod user luke pw lukeluke)

3/8/2023 : Karl 
- SCHEMA CHANGE: GlobalModeratorAssignments is_deactivation now NOT NULL. Re migrate your DBs!
- umanager.go : domain and global moderator controllers initialized and assigned when appropriate 
- added methods to domain and global moderator controllers where polymorphically necessary 
- Queries.GetDomainModeratorAssignments, Queries.GetGlobalModeratorAssignments (sqlc generated)
- Store.GetDomainModeratorAssignments, Store.IsGlobalModerator
- user profile in login response now populated correct based on SQL table for IsDomainModerator, IsGlobalModerator, and DomainsModerating. Data can be used as appropriate to realize UI on the front end. 

3/1/2023 : Karl 
- newFeedback implemented

2/26/2023 : Karl
- Server now produces error if it fails to connect to server 
- Getting admin user level redone in a more reliable way

2/24/2023 : Karl 
- ViewUsersReport pipeline
- ToggleFeedbackHidden pipeline 
- ViewFeedbackSection pipeline 
- Assign AdminControllers to admins 
- Store.IsAdmin 
- Controller.GetControllerType() 
- user list in cli and usermanager


2/19/2023: Karl
- Implemented CommentVote 
- Changed communication.CommentVote.Value to type int16 and the type in the table to match. Also made table value non-null. 
- GetVotesForCommentAndCategoryByUser, CreateCommentVote, DeleteCommentVote, UpdateCommentVote queries
- controller.HandleCommandVoteComment, server.voteComment for the API path


2/18/2023: All group members
- Fixed null-comment bugs ( making the slice was starting with empty structs, capacity was being passed in as length)
- Fixed no comments being pulled from database (comment.sql error) ; was querying based on comment id not path id 
- Make all domains and paths lowercase for consistency

2/18/2023: Karl
- in store, created transformGeneratedCommentToCommunicationComment
- in store, created NewComment
- CreateComment and GetCommentByID generated funcs
- HandleCommandCommentReply
- fixed nextResponse bug: next responses weren't clearing after succesful responses and front ends were receiving all old responses
- Page is now responsible for calling user.SetPage 
- Page.NewComment 
- New CLI functions for page manager, such as GetPageInfo and GetPagesList
- route_newComment.go


2/17/2023: Karl
- Page.GetComments 
- HandleCommandGetComments in guest and member controllers (separate, because different maps get updated)
- endpoint listener
- path extract regex in package util, and unit tests (pretty tough regex to right, and we should test it more!)
- store.GetComments now handles performing multiple queries to construct appropriate comment responses
- generated path, domain, and comment code (comments.sql, domains.sql, paths.sql, comments.sql.go, domains.sql.go, paths.sql.go)
- changed page struct to break domain, path, pathID into separate things.
- All member page transfers now occur in pageManager, not in member controllers. 
- Member controllers are, however, still ultimately responsible for passing themselves to the Page to populate their response with comments. 


2/16/2023: Karl
- Comm entities: Comment, CommentVoteDimension, CommentReply, CommentVote, GetCommnets
- PageManager started
- Page started 
- Added GetPage() to UC interface & implemented in Base 
- Started route_getComments, HandleGetComments, getComments, etc.
- Resetting password from code now deletes code in db 



2/12/2023: Karl
- ChangeEmail, ChangeProfile blurb
- Logout
- Added comm entities necessary for correct client side communication


2/10/2023: Karl
 - Added the login pipeline.
    - Had to do major work including changing the way a token is transmitted from being a cookie to being an actual server object that comes back on the response.
 - Merged the 'SetCookie' method of memberControllerBase and GuestController to be one method of UserController base. 
 - Added debugging and appropriate launch.json config for that.


2/7/2023 : Karl
 - Added a simple CLI and logger to the server. There is now a separate thread for the CLI and the server runs in the background. The server can be stopped through the CLI. The CLI can also toggle logging and get a count of the active users.

2/4/2023 : Karl
 - More detailed comments.

2/3/2023 : Karl
- sqlc code generation
- queries related to register, generated code
- fleshed out store.go
- lots of tests for register and store
- enabled debugging in VSCode
- register pipeline
- usermanager
- controllers were created
- validate functions created and package util created
- altogether ~6 hours of work at least