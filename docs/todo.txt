
--- UserProfile

- in both register and login, the UserProfile portion of a LoginResponse is generated line by line, but is incomplete. Additional queries need to be performed to determine, for example, which domains a user can moderate. A func which converts a User to a UserProfile response could be used in both situations. 


--- Validators

- these will be fun to implement

password entropy check : https://golangexample.com/validate-the-strength-of-a-password-in-go/

should also check a rainbow table of common passwords

Can move to util module

---- Register pipeline

- finish creating testRegister.html / integrate test with the front end work

- create sub functions for encrypting and decrypting user password
- create function for validating email address and username
- run these functions in the handle register method of a guest controller, push appropriate message errors
- tests for communication methods
- tests for controller methods and sub functions

---- auth 

- gettoken function in server/auth ; we should make the expiration time changable in the .env file perhaps




-- decent tuts on digitalocean, always: https://www.digitalocean.com/community/tutorials/how-to-make-an-http-server-in-go