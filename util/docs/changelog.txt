3/29/2023: Karl 
- Ban pipeline finished
- Domain banning and global banning 
- Making profileUpdateResponse a polymorphic method of controllers


3/24/2023: Karl 
- ViewModRecords pipeline
- Made some schema changes, re-migrate required 

3/22/2023: Karl
- Moderate pipeline "/moderate"
- comment reports and votes won't work for removed comments
- removed comments return "~removed~" and empty string username to requesting users. This is only in the page cache, not what is stored in the database. 
- removed comments update in the page cache in real time to "remove" so we don't have to restart server to see removed comments
- viewing comment reports only shows reports that have had no action taken on them 
- Queries.GetCurrentDomain(commentID) to quickly get a comment's domain 
- 

3/21/2023: Karl
- adding logs to the database for every request. Uses a context associated with the request to update the userID in case that request results in a log-in.
- /viewLogs pipeline. Used a decently long function in package database for all the filtering. (store.GetLogs)

3/19/2023: Karl
- Update communication.CommentReport to match design document field names


3/18/2023 : Karl
- Finished back-end portion of pipeline for sending CommentReports. Wrote SQL query. Validates if domain is one moderated for domain moderator or global moderator. Will send all commentReports to Global and Admins if the domain requested is 'all', otherwise will provide just for a specific domain. 

3/17/2023 : Karl 
- PostCommentReport, needed queries and routes, also added 2 default reports to the 2nd migration

3/12/2023: Luke & Karl
- Started pipeline for sending CommentReports

3/12/2023: Karl
- AssignGlobalModerator, AssignAdmin structs and pipeline 
- Changing a logged-in user's controller will swap it at runtime and push a login response to the user's nextmessages so their front end can quickly realize the changes. 
- Added a 2nd migration to populate some test data (admin user karl pw karlkarl, globalmod user luke pw lukeluke)

3/8/2023 : Karl 
- SCHEMA CHANGE: GlobalModeratorAssignments is_deactivation now NOT NULL. Re migrate your DBs!
- umanager.go : domain and global moderator controllers initialized and assigned when appropriate 
- added methods to domain and global moderator controllers where polymorphically necessary 
- Queries.GetDomainModeratorAssignments, Queries.GetGlobalModeratorAssignments (sqlc generated)
- Store.GetDomainModeratorAssignments, Store.IsGlobalModerator
- user profile in login response now populated correct based on SQL table for IsDomainModerator, IsGlobalModerator, and DomainsModerating. Data can be used as appropriate to realize UI on the front end. 

3/1/2023 : Karl 
- newFeedback implemented

2/26/2023 : Karl
- Server now produces error if it fails to connect to server 
- Getting admin user level redone in a more reliable way

2/24/2023 : Karl 
- ViewUsersReport pipeline
- ToggleFeedbackHidden pipeline 
- ViewFeedbackSection pipeline 
- Assign AdminControllers to admins 
- Store.IsAdmin 
- Controller.GetControllerType() 
- user list in cli and usermanager


2/19/2023: Karl
- Implemented CommentVote 
- Changed communication.CommentVote.Value to type int16 and the type in the table to match. Also made table value non-null. 
- GetVotesForCommentAndCategoryByUser, CreateCommentVote, DeleteCommentVote, UpdateCommentVote queries
- controller.HandleCommandVoteComment, server.voteComment for the API path


2/18/2023: All group members
- Fixed null-comment bugs ( making the slice was starting with empty structs, capacity was being passed in as length)
- Fixed no comments being pulled from database (comment.sql error) ; was querying based on comment id not path id 
- Make all domains and paths lowercase for consistency

2/18/2023: Karl
- in store, created transformGeneratedCommentToCommunicationComment
- in store, created NewComment
- CreateComment and GetCommentByID generated funcs
- HandleCommandCommentReply
- fixed nextResponse bug: next responses weren't clearing after succesful responses and front ends were receiving all old responses
- Page is now responsible for calling user.SetPage 
- Page.NewComment 
- New CLI functions for page manager, such as GetPageInfo and GetPagesList
- route_newComment.go


2/17/2023: Karl
- Page.GetComments 
- HandleCommandGetComments in guest and member controllers (separate, because different maps get updated)
- endpoint listener
- path extract regex in package util, and unit tests (pretty tough regex to right, and we should test it more!)
- store.GetComments now handles performing multiple queries to construct appropriate comment responses
- generated path, domain, and comment code (comments.sql, domains.sql, paths.sql, comments.sql.go, domains.sql.go, paths.sql.go)
- changed page struct to break domain, path, pathID into separate things.
- All member page transfers now occur in pageManager, not in member controllers. 
- Member controllers are, however, still ultimately responsible for passing themselves to the Page to populate their response with comments. 


2/16/2023: Karl
- Comm entities: Comment, CommentVoteDimension, CommentReply, CommentVote, GetCommnets
- PageManager started
- Page started 
- Added GetPage() to UC interface & implemented in Base 
- Started route_getComments, HandleGetComments, getComments, etc.
- Resetting password from code now deletes code in db 



2/12/2023: Karl
- ChangeEmail, ChangeProfile blurb
- Logout
- Added comm entities necessary for correct client side communication


2/10/2023: Karl
 - Added the login pipeline.
    - Had to do major work including changing the way a token is transmitted from being a cookie to being an actual server object that comes back on the response.
 - Merged the 'SetCookie' method of memberControllerBase and GuestController to be one method of UserController base. 
 - Added debugging and appropriate launch.json config for that.


2/7/2023 : Karl
 - Added a simple CLI and logger to the server. There is now a separate thread for the CLI and the server runs in the background. The server can be stopped through the CLI. The CLI can also toggle logging and get a count of the active users.

2/4/2023 : Karl
 - More detailed comments.

2/3/2023 : Karl
- sqlc code generation
- queries related to register, generated code
- fleshed out store.go
- lots of tests for register and store
- enabled debugging in VSCode
- register pipeline
- usermanager
- controllers were created
- validate functions created and package util created
- altogether ~6 hours of work at least